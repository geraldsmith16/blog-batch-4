{"title":"คู่มือเริ่มต้นสำหรับการเขียนแผนผังฐานข้อมูล mySQL","content":"<p> เมื่อพัฒนาโครงการซอฟต์แวร์ สิ่งสำคัญที่สุดประการหนึ่ง ด้านพื้นฐานและภายในคือ สคีมาฐานข้อมูลที่มีโครงสร้างอย่างเหมาะสม เทียบเท่ากับการสร้างบ้านที่คุณต้องวางรากฐานอย่างเหมาะสม ไม่เช่นนั้นโอกาสในการสร้างบ้านที่มีคุณภาพจะลดลงอย่างมาก </p> <p> ง่ายกว่าที่คิด มาเรียนรู้แง่มุมต่างๆ ที่ใช้ในการเขียนสคีมาฐานข้อมูลที่ออกแบบอย่างดี </p> <h2 id=\"create-table-syntax\"> สร้างไวยากรณ์ตาราง </h2> <p> ในการเริ่มต้น ให้เปิดรายการโปรดของคุณ <a href=\"https://www.makeuseof.com/tag/nano-vs-vim-terminal-text-editors-compared/\" target=\"_blank\" rel=\"nofollow noopener\"> โปรแกรมแก้ไขข้อความ </a> . การสร้างสคีมาฐานข้อมูลไม่ต้องการอะไรมากไปกว่าไฟล์ข้อความธรรมดา ฐานข้อมูลประกอบด้วยตารางหลายตาราง แต่ละตารางประกอบด้วยคอลัมน์ และใช้ไวยากรณ์ CREATE TABLE เพื่อสร้างตารางเดียว นี่คือตัวอย่างพื้นฐาน: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL,<br>is_active TINY INT NOT NULL,<br>full_name VAR CHAR(100) NOT NULL,<br>email VARCHAR(100) NOT NULL<br>);<br></code></pre> <p> อย่างที่คุณเห็นสิ่งนี้จะสร้างตารางฐานข้อมูลชื่อ <strong> ผู้ใช้ </strong> ซึ่งประกอบด้วยสี่คอลัมน์ นี่ควรเป็นคำสั่ง SQL ที่ค่อนข้างตรงไปตรงมาที่ขึ้นต้นด้วย <strong> สร้างตาราง </strong> ตามด้วยชื่อของตารางฐานข้อมูล จากนั้นในวงเล็บจะมีคอลัมน์ของตารางคั่นด้วยเครื่องหมายจุลภาค </p> <p> </p> <h2 id=\"use-correct-column-types\"> ใช้ประเภทคอลัมน์ที่ถูกต้อง </h2> <p> ดังที่แสดงด้านบน คอลัมน์ในตารางจะประกอบด้วยคั่นด้วยเครื่องหมายจุลภาค คำนิยามแต่ละคอลัมน์ประกอบด้วยสามส่วนเดียวกัน: </p> <pre><code class=\"hljs\">COL_NAME     TYPE     [OPTIONS]</code></pre> <p> ชื่อของคอลัมน์ ตามด้วยประเภทคอลัมน์ ตามด้วยพารามิเตอร์ทางเลือกใดๆ เราจะพูดถึงพารามิเตอร์ทางเลือกในภายหลัง แต่เน้นที่ประเภทคอลัมน์ ด้านล่างแสดงรายการประเภทคอลัมน์ที่ใช้บ่อยที่สุดที่มี: </p> <p> สำหรับ Intents ทั้งหมด ประเภทคอลัมน์ข้างต้นเป็นสิ่งที่คุณต้องเขียนสกีมาฐานข้อมูล mySQL </p> <p> </p> <h2 id=\"define-column-options\"> กำหนดตัวเลือกคอลัมน์ </h2> <p> เมื่อกำหนดคอลัมน์ คุณยังระบุตัวเลือกต่างๆ ได้อีกด้วย ด้านล่างนี้เป็นอีกตัวอย่างหนึ่งของ <strong> สร้างตาราง </strong> คำให้การ: </p> <pre><code class=\"hljs ruby\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>status ENUM('active','inactive') NOT NULL DEFAULT 'active',<br>balance DECIMAL(8,2) NOT NULL DEFAULT 0,<br>date_of_birth DATETIME,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>);<br></code></pre> <p> ข้างต้นอาจดูน่ากลัวเล็กน้อย แต่ไม่ต้องกังวล มันค่อนข้างง่าย นี่คือสิ่งที่เกิดขึ้นในข้อความข้างต้น: </p> <ul> <li> คุณควรใช้ NOT NULL กับทุกคอลัมน์ที่เป็นไปได้เสมอ เพื่อช่วยในเรื่องความเร็วและประสิทธิภาพของตาราง นี่เพียงระบุคอลัมน์ที่ไม่สามารถเว้นว่าง / null เมื่อแทรกแถว </li> <li> พยายามรักษาขนาดคอลัมน์ให้เล็กที่สุดเท่าที่เป็นไปได้เสมอ เนื่องจากจะช่วยปรับปรุงความเร็วและประสิทธิภาพ </li> <li> <strong> id </strong> คอลัมน์เป็นจำนวนเต็ม เป็นคีย์หลักของตารางด้วย ซึ่งหมายความว่าไม่ซ้ำกัน และจะเพิ่มขึ้นทีละรายการทุกครั้งที่แทรกระเบียน โดยทั่วไปควรใช้กับตารางทั้งหมดที่คุณสร้าง เพื่อให้คุณสามารถอ้างอิงแถวเดียวภายในตารางได้อย่างง่ายดาย </li> <li> <strong> สถานะ </strong> คอลัมน์เป็น ENUM และต้องมีค่าเป็น &quot;active&quot; หรือ &quot;inactive&quot; หากไม่มีการระบุค่า แถวใหม่จะเริ่มต้นด้วยสถานะ &quot;ใช้งานอยู่&quot; </li> <li> <strong> สมดุล </strong> คอลัมน์เริ่มต้นที่ 0 สำหรับทุกแถวใหม่ และเป็นจำนวนที่จัดรูปแบบจุดทศนิยมสองตำแหน่ง </li> <li> <strong> วันเกิด </strong> คอลัมน์เป็นเพียงวันที่ แต่ยังอนุญาตให้มีค่าว่างเนื่องจากวันเดือนปีเกิดอาจไม่เป็นที่รู้จักเมื่อสร้าง </li> <li> สุดท้าย <strong> สร้าง_at </strong> คอลัมน์คือ TIMESTAMP และค่าเริ่มต้นเป็นเวลาปัจจุบันเมื่อแทรกแถว </li> </ul> <p> ข้างต้นเป็นตัวอย่างของตารางฐานข้อมูลที่มีโครงสร้างสวยงาม และควรใช้เป็นตัวอย่างในอนาคต </p> <p> </p> <h2 id=\"link-tables-together-with-foreign-key-constraints\"> เชื่อมโยงตารางพร้อมกับข้อจำกัดของคีย์ต่างประเทศ </h2> <p> ข้อดีอย่างหนึ่งของการใช้ฐานข้อมูลเชิงสัมพันธ์เช่น <a href=\"https://www.makeuseof.com/tag/install-mysql-windows/\" target=\"_blank\" rel=\"nofollow noopener\"> mySQL </a> คือการสนับสนุนที่ยอดเยี่ยมสำหรับข้อจำกัดของคีย์ต่างประเทศและการเรียงซ้อน นี่คือเมื่อคุณเชื่อมโยงตารางสองตารางเข้าด้วยกันโดยคอลัมน์ สร้างความสัมพันธ์หลักกับลูก ดังนั้นเมื่อแถวหลักถูกลบ แถวย่อยที่จำเป็นจะถูกลบโดยอัตโนมัติด้วย </p> <p> นี่คือตัวอย่าง: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>full_name VARCHAR(100) NOT NULL,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>) engine=InnoDB;<br>CREATE TABLE orders (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>userid INT NOT NULL,<br>amount DECIMAL(8,2) NOT NULL,<br>product_name VARCHAR(200) NOT NULL,<br>FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE<br>) engine=InnoDB;<br></code></pre> <p> คุณจะสังเกตเห็นส่วนคำสั่ง FOREIGN KEY เป็นบรรทัดสุดท้าย บรรทัดนี้ระบุตารางนี้มีแถวย่อยที่ลิงก์โดย <strong> รหัสผู้ใช้ </strong> ไปที่แถวหลักซึ่งก็คือ <strong> id </strong> คอลัมน์ของ <strong> ผู้ใช้ </strong> โต๊ะ. สิ่งนี้หมายความว่า ทุกครั้งที่แถวถูกลบออกจาก from <strong> ผู้ใช้ </strong> ตาราง mySQL จะลบแถวที่เกี่ยวข้องทั้งหมดออกจาก . โดยอัตโนมัติ <strong> คำสั่ง </strong> ตารางช่วยรับรองความสมบูรณ์ของโครงสร้างภายในฐานข้อมูลของคุณ </p> <p> สังเกตด้วย <strong> เครื่องยนต์=InnoDB </strong> ที่ส่วนท้ายของข้อความข้างต้น แม้ว่า InnoDB จะเป็นประเภทตารางเริ่มต้นของ mySQL แต่ก็ไม่เสมอไป ดังนั้นจึงควรเพิ่มข้อมูลนี้เพื่อให้อยู่ในด้านความปลอดภัย เนื่องจาก cascading ใช้งานได้กับตาราง InnoDB </p> <p> </p> <h2 id=\"design-with-confidence\"> ออกแบบด้วยความมั่นใจ </h2> <p> ตอนนี้คุณพร้อมสำหรับการสร้างสคีมาฐานข้อมูล mySQL ที่แข็งแกร่งและมีโครงสร้างที่ดีแล้ว เมื่อใช้ความรู้ข้างต้นนี้ คุณจะสามารถเขียนสคีมาที่มีการจัดระเบียบอย่างดี ซึ่งให้ทั้งประสิทธิภาพและโครงสร้าง </p> <p> ด้วยสคีมาของคุณ ให้แน่ใจว่าคุณรู้วิธีใช้มันกับ <a href=\"https://www.makeuseof.com/tag/sql-commands-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener\"> คำสั่ง SQL ที่จำเป็น </a> . </p>"}