{"title":"Yeni Başlayanlar İçin mySQL Veritabanı Şemaları Yazma Kılavuzu","content":"<p> Bir yazılım projesi geliştirirken en önemli, temel ve içsel yönlerden biri, uygun şekilde yapılandırılmış bir veritabanı şemasıdır. Bu, bir ev inşa ederken temelin düzgün bir şekilde atıldığından emin olmanıza eşdeğerdir, aksi takdirde kaliteli bir ev inşa etme şansı büyük ölçüde azalır. </p> <p> Düşündüğünden şaşırtıcı derecede kolay, iyi tasarlanmış bir veritabanı şeması yazmak için kullanılan çeşitli yönleri öğrenelim. </p> <h2 id=\"create-table-syntax\"> TABLO OLUŞTUR Sözdizimi </h2> <p> Başlamak için favorinizi açın <a href=\"https://www.makeuseof.com/tag/nano-vs-vim-terminal-text-editors-compared/\" target=\"_blank\" rel=\"nofollow noopener\"> Metin düzeltici </a> . Bir veritabanı şeması oluşturmak, düz metin dosyasından başka bir şey gerektirmez. Bir veritabanı, her biri sütunlardan oluşan birden çok tablodan oluşur ve tek bir tablo oluşturmak için CREATE TABLE sözdizimi kullanılır. İşte temel bir örnek: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL,<br>is_active TINY INT NOT NULL,<br>full_name VAR CHAR(100) NOT NULL,<br>email VARCHAR(100) NOT NULL<br>);<br></code></pre> <p> Gördüğünüz gibi bu, adında bir veritabanı tablosu oluşturacaktır. <strong> kullanıcılar </strong> dört sütundan oluşur. Bu, ile başlayan oldukça yalındır bir SQL ifadesi olmalıdır. <strong> TABLO OLUŞTUR </strong> , ardından veritabanı tablolarının adı, ardından parantez içinde virgülle ayrılmış tablo sütunları. </p> <p> </p> <h2 id=\"use-correct-column-types\"> Doğru Sütun Türlerini Kullanın </h2> <p> Yukarıda gösterildiği gibi, tablonun oluşturacağı sütunlar virgülle ayrılır. Her sütun tanımı aynı üç bölümden oluşur: </p> <pre><code class=\"hljs\">COL_NAME     TYPE     [OPTIONS]</code></pre> <p> Sütunun adı, ardından sütun türü, ardından isteğe bağlı parametreler. İsteğe bağlı parametrelere daha sonra gireceğiz, ancak sütun türüne odaklanarak, aşağıda en sık kullanılan sütun türleri listelenmiştir: </p> <p> Tüm amaçlar için, iyi yapılandırılmış mySQL veritabanı şemaları yazmak için ihtiyacınız olan tek şey yukarıdaki sütun türleridir. </p> <p> </p> <h2 id=\"define-column-options\"> Sütun Seçeneklerini Tanımlayın </h2> <p> Sütunları tanımlarken de belirtebileceğiniz çeşitli seçenekler vardır. Aşağıda başka bir örnek <strong> TABLO OLUŞTUR </strong> Beyan: </p> <pre><code class=\"hljs ruby\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>status ENUM('active','inactive') NOT NULL DEFAULT 'active',<br>balance DECIMAL(8,2) NOT NULL DEFAULT 0,<br>date_of_birth DATETIME,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>);<br></code></pre> <p> Yukarıdakiler biraz göz korkutucu görünebilir, ancak endişelenmeyin, oldukça basit. Kırılmış, işte yukarıdaki açıklamada neler oluyor: </p> <ul> <li> Tablonun hızına ve performansına yardımcı olmak için her zaman mümkün olan tüm sütunlarda NOT NULL kullanmalısınız. Bu, bir satır eklendiğinde sütunun boş / boş bırakılamayacağını belirtir. </li> <li> Hızı ve performansı artırmaya yardımcı olacağından, sütun boyutunu her zaman gerçekçi olarak mümkün olduğunca küçük tutmaya çalışın. </li> <li> <strong> İD </strong> sütun bir tamsayıdır, aynı zamanda benzersiz olduğu anlamına gelen tablonun birincil anahtarıdır ve her kayıt eklendiğinde birer birer artar. Bu genellikle oluşturduğunuz tüm tablolarda kullanılmalıdır, böylece tablodaki herhangi bir satıra kolayca başvurabilirsiniz. </li> <li> <strong> durum </strong> sütun bir ENUM&#39;dur ve &quot;etkin&quot; veya &quot;etkin değil&quot; değerine sahip olmalıdır. Herhangi bir değer belirtilmezse, &quot;etkin&quot; durumuyla yeni bir satır başlayacaktır. </li> <li> <strong> denge </strong> sütun, her yeni satır için 0&#39;dan başlar ve iki iki ondalık basamak olarak biçimlendirilmiş bir miktardır. </li> <li> <strong> doğum tarihi </strong> sütun yalnızca bir TARİH&#39;tir, ancak doğum tarihi oluşturulduktan sonra bilinmeyebileceğinden boş bir değere de izin verir. </li> <li> Son olarak, <strong> create_at </strong> sütun bir TIMESTAMP&#39;dir ve varsayılan olarak satırın eklendiği geçerli saattir. </li> </ul> <p> Yukarıdaki, güzel yapılandırılmış bir veritabanı tablosu örneğidir ve ileriye dönük bir örnek olarak kullanılmalıdır. </p> <p> </p> <h2 id=\"link-tables-together-with-foreign-key-constraints\"> Tabloları Yabancı Anahtar Kısıtlamalarla Birlikte Bağlayın </h2> <p> İlişkisel veritabanlarını kullanmanın en büyük avantajlarından biri <a href=\"https://www.makeuseof.com/tag/install-mysql-windows/\" target=\"_blank\" rel=\"nofollow noopener\"> mySQL </a> yabancı anahtar kısıtlamaları ve basamaklandırma için mükemmel desteğidir. Bu, iki tabloyu bir sütunla birbirine bağladığınızda bir üst çocuk ilişkisi oluşturur, böylece üst satır silindiğinde gerekli alt satırlar da otomatik olarak silinir. </p> <p> İşte bir örnek: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>full_name VARCHAR(100) NOT NULL,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>) engine=InnoDB;<br>CREATE TABLE orders (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>userid INT NOT NULL,<br>amount DECIMAL(8,2) NOT NULL,<br>product_name VARCHAR(200) NOT NULL,<br>FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE<br>) engine=InnoDB;<br></code></pre> <p> Son satır olarak FOREIGN KEY yan tümcesini göreceksiniz. Bu satır, basitçe, bu tablonun aşağıdakiler tarafından bağlanan alt satırları içerdiğini belirtir. <strong> Kullanıcı kimliği </strong> sütunu, üst satırına <strong> İD </strong> sütunu <strong> kullanıcılar </strong> masa. Bunun anlamı şudur: <strong> kullanıcılar </strong> tablosunda, mySQL ilgili tüm satırları otomatik olarak silecektir. <strong> emirler </strong> veritabanınızda yapısal bütünlük sağlamaya yardımcı olan tablo. </p> <p> Ayrıca not edin <strong> motor=InnoDB </strong> Yukarıdaki açıklamanın sonunda. InnoDB artık varsayılan mySQL tablo türü olsa da, her zaman böyle değildi, bu nedenle basamaklama yalnızca InnoDB tablolarıyla çalıştığından, bu yalnızca güvenli tarafta kalmak için eklenmelidir. </p> <p> </p> <h2 id=\"design-with-confidence\"> Güvenle Tasarım </h2> <p> Artık sağlam, iyi yapılandırılmış mySQL veritabanı şemaları tasarlama yolundasınız. Yukarıdaki bilgileri kullanarak, hem performans hem de yapısal bütünlük sağlayan iyi organize edilmiş şemalar yazabilirsiniz. </p> <p> Şemanız yerindeyken, onu bunlarla nasıl kullanacağınızı bildiğinizden emin olun. <a href=\"https://www.makeuseof.com/tag/sql-commands-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener\"> temel SQL komutları </a> . </p>"}