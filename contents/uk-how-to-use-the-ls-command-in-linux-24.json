{"title":"Як використовувати команду ls в Linux","content":"<p> Отримати детальну інформацію, пов’язану з файлами на вашому сховищі, досить складно, якщо ви не знаєте, як використовувати команду ls. Тут ми обговоримо все, що пов&#39;язано з командою ls в Linux, а також деякі різні прапори, що використовуються з нею. </p> <h2 id=\"the-ls-command-on-linux\"> Команда ls на Linux </h2> <p> Команда ls використовується для переліку всіх файлів і папок, що є у вашому поточному робочому каталозі. Ви також можете отримати різноманітну інформацію про файли, використовуючи ту саму команду. Оскільки він уже включений в основний пакет службових програм GNU, вам не потрібно встановлювати будь-який додатковий пакет у вашій системі, щоб використовувати його. </p> <p> Ви також можете прив&#39;язати ls до інших команд bash. Наприклад, трубопровід a <strong> grep </strong> заява с <strong> ls </strong> дозволить вам шукати та фільтрувати каталог за певними файлами. </p> <p> </p> <h2 id=\"how-to-use-the-ls-command\"> Як використовувати команду ls </h2> <p> Основним синтаксисом команди ls є: </p> <pre><code class=\"hljs\">ls [options] [directory]</code></pre> <p> Одним з найбільш простих застосувань команди є перелік усіх файлів і папок у поточному робочому каталозі. </p> <pre><code class=\"hljs\">ls</code></pre> <p> Якщо виконати згаданий оператор у кореневому каталозі вашої системи, ви побачите результат, який виглядає приблизно так. </p> <pre><code class=\"hljs\">bin    dev   home   lib64        mnt   proc   run    srv   tmp   var<br>boot   etc   lib    lost+found   opt   root   sbin   sys   usr</code></pre> <h3 id=\"listing-files-in-a-specific-directory\"> Перелік файлів у певному каталозі </h3> <p> Для перерахування файлів, що належать до іншої папки (не до поточного робочого каталогу), вам доведеться передати шлях до каталогу разом із назвою команди. </p> <pre><code class=\"hljs\">ls [directory]</code></pre> <p> Щоб отримати список усіх файлів, що містяться в <strong> / завантаження </strong> каталог: </p> <pre><code class=\"hljs\">ls /boot</code></pre> <p> На виході тепер відображатимуться файли та папки, що містяться в наданій назві каталогу. </p> <pre><code class=\"hljs\">EFI   grub   initramfs-linux-fallback.img   initramfs-linux.img   vmlinuz-linux</code></pre> <p> Використання <strong> -F </strong> прапор із командою додасть символ / в кінці кожного каталогу. </p> <pre><code class=\"hljs\">EFI/   grub/   initramfs-linux-fallback.img   initramfs-linux.img   vmlinuz-linux</code></pre> <p> Ви також можете передавати кілька каталогів, відокремлюючи імена шляхів за допомогою a <strong> Космос </strong> характер. </p> <pre><code class=\"hljs\">ls /boot /usr</code></pre> <pre><code class=\"hljs ruby\">Output<br>/boot:<br>EFI   grub   initramfs-linux-fallback.img   initramfs-linux.img   vmlinuz-linux<br>/usr:<br>bin   etc   include   lib   lib32   lib64   local   sbin   share   src</code></pre> <h3 id=\"list-files-in-the-root-directory\"> Список файлів у кореневому каталозі </h3> <p> Кореневий каталог містить усі інші каталоги та файли у вашій системі. Це найвища папка в ієрархії каталогів вашого комп’ютера. Кореневий каталог зазвичай позначається символом <strong> / </strong> характер. </p> <pre><code class=\"hljs\">ls /</code></pre> <p> Не має значення, в якому каталозі ви знаходитесь під час введення команди, вищезазначена команда видасть результат, який перераховує всі вкладені папки та файли, що знаходяться всередині кореневого каталогу. </p> <h3 id=\"list-files-in-the-parent-directory\"> Список файлів у батьківському каталозі </h3> <p> Батьківський каталог у Linux - це каталог над поточним каталогом. Давай візьмемо <strong> / usr / bin </strong> як приклад. Ось, <strong> / bin </strong> - ваш поточний робочий каталог, і <strong> / usr </strong> є батьківським каталогом. </p> <p> Щоб отримати список усіх файлів у батьківському каталозі: </p> <pre><code class=\"hljs\">ls ..</code></pre> <pre><code class=\"hljs ruby\">bin   etc   include   lib   lib32   lib64   local   sbin   share   src</code></pre> <p> Додавання іншого <strong> .. </strong> перенесе вас до батьківського каталогу батьківського каталогу. Наприклад, <strong> / var / log / old </strong> це ваш поточний робочий каталог. <strong> ls .. </strong> перелічить папки, присутні в <strong> / журнал </strong> каталог, тоді як <strong> ls ../ .. </strong> надасть вам список усіх файлів і папок, що містяться в <strong> / var </strong> каталог. </p> <pre><code class=\"hljs\">ls ../..</code></pre> <pre><code class=\"hljs perl\">cache   db   empty   games   lib   local   lock   log   mail   opt   run   spool   tmp</code></pre> <h3 id=\"list-files-in-the-home-directory\"> Перелічіть файли в домашній директорії </h3> <p> Домашній каталог у Linux позначається символом <strong> ~ </strong> характер. Отже, щоб перерахувати вміст, доступний у вашому домашньому каталозі: </p> <pre><code class=\"hljs\">ls ~</code></pre> <h3 id=\"list-only-directories-no-files\"> Список лише каталогів (без файлів) </h3> <p> Якщо з якоїсь причини ви хочете лише перерахувати папки, присутні в каталозі, використовуйте <strong> -d </strong> прапор із типовою командою ls. </p> <pre><code class=\"hljs\">ls -d /home</code></pre> <h3 id=\"list-files-with-sub-directories\"> Список файлів із підкаталогами </h3> <p> Використання <strong> * </strong> символ із командою ls надасть вам список усіх файлів і папок у поточному робочому каталозі, а також підкаталоги. </p> <pre><code class=\"hljs\">ls *</code></pre> <h3 id=\"list-files-recursively\"> Перераховуйте файли рекурсивно </h3> <p> Використання <strong> -R </strong> прапорець із командою за замовчуванням перерахує всі файли та папки, що знаходяться в каталозі, до останнього рівня. </p> <pre><code class=\"hljs\">ls -R</code></pre> <p> Зверніть увагу, що ви також можете передати шлях до каталогу разом із рекурсивним прапором. Це означає що <strong> ls / usr / home -R </strong> є допустимою командою. </p> <h3 id=\"list-files-with-their-size\"> Перелічіть файли за їх розміром </h3> <p> Щоб отримати назви всіх файлів разом із їх розміром, використовуйте <strong> -s </strong> прапор із командою. </p> <pre><code class=\"hljs perl\">ls -s /yay-git</code></pre> <pre><code class=\"hljs\">total 2944<br>4 pkg   4 src   4 yay   2932 yay-git-10.1.2.r0.g7d849a8-2-x86_64.pkg.tar.zst</code></pre> <p> </p> <h3 id=\"list-files-with-detailed-information\"> Перелічіть файли з детальною інформацією </h3> <p> <strong> -л </strong> flag дозволяє отримати список вмісту каталогу Linux із докладним описом кожного запису. У вихідні дані включена наступна інформація: </p> <ol> <li> Дозволи на файли та папки </li> <li> Кількість посилань </li> <li> Власник вмісту </li> <li> Власник групи </li> <li> Розмір вмісту </li> <li> Назва файлу </li> <li> Дата та час останньої зміни </li> </ol> <pre><code class=\"hljs\">ls -l</code></pre> <pre><code class=\"hljs perl\">total 2944<br>drwxr-xr-x   3   sharmadeepesh   sharmadeepesh   4096   Feb 8 13:53   pkg<br>drwxr-xr-x   4   sharmadeepesh   sharmadeepesh   4096   Feb 8 13:52   src<br>drwxr-xr-x   7   sharmadeepesh   sharmadeepesh   4096   Feb 8 13:54   yay<br>-rw-r--r--   1   sharmadeepesh   sharmadeepesh   2998674   Feb 8 13:53   yay-git-10.1.2.r0.g7d849a8-2-x86_64.pkg.tar.zst</code></pre> <p> Перший стовпець зарезервований для дозволів на файли та папки. Перший символ позначає тип файлу, а наступні дев&#39;ять символів - дозволи файлу. </p> <p> Різні типи файлів, з якими ви часто стикаєтесь: </p> <ol> <li> Звичайні файли (-) </li> <li> Блокувати спеціальні файли (b) </li> <li> Спеціальні файли символів (c) </li> <li> Каталог (d) </li> <li> Символічне посилання (л) </li> <li> Файл мережі (n) </li> <li> FIFO (p) </li> <li> Розетка (и) </li> </ol> <p> Говорячи про дозволи файлів, у вихідних даних використовуються такі символи. </p> <ol> <li> Читається (r) </li> <li> Для запису (w) </li> <li> Виконуваний файл (x) </li> </ol> <p> Давай візьмемо <strong> d </strong><strong> rw-r - r-- </strong> як приклад. Перший символ повідомляє, що запис є каталогом. Наступні два символи означають, що поточний користувач має дозволи на читання та запис. Решта символів надають інформацію про дозволи для файлів для інших користувачів. </p> <h3 id=\"list-files-with-readable-size\"> Список файлів з читабельним розміром </h3> <p> <strong> -s </strong> Команда надає числове значення, пов&#39;язане з кожним записом. І як очевидно, ви не знаєте, що означає це значення. Тому, щоб переглядати файли та їх розміри зручно для читання, використовуйте <strong> -лх </strong> прапор разом із командою. </p> <pre><code class=\"hljs\">ls -lh</code></pre> <pre><code class=\"hljs perl\">total 2.9M<br>drwxr-xr-x   3   sharmadeepesh   sharmadeepesh   4.0K   Feb 8 13:53   pkg<br>drwxr-xr-x   4   sharmadeepesh   sharmadeepesh   4.0K   Feb 8 13:52   src<br>drwxr-xr-x   7   sharmadeepesh   sharmadeepesh   4.0K   Feb 8 13:54   yay<br>-rw-r--r--   1   sharmadeepesh   sharmadeepesh   2.9M   Feb 8 13:53   yay-git-10.1.2.r0.g7d849a8-2-x86_64.pkg.tar.zst</code></pre> <p> У вихідних даних використовуються специфікатори розміру для байтів (B), мегабайт (MB), гігабайт (GB) і терабайт (TB). </p> <h3 id=\"list-hidden-files\"> Список прихованих файлів </h3> <p> За замовчуванням <strong> ls </strong> команда не включає приховані файли у вихідні дані. Щоб переглянути вміст, який користувач встановив як прихований, передайте <strong> -а </strong> прапор із командою ls. </p> <pre><code class=\"hljs\">ls -a</code></pre> <h3 id=\"piping-ls-with-grep-command\"> Трубопровід ls за допомогою команди Grep </h3> <p> Команда grep використовується для узгодження шаблонів, які слідують за певним регулярним виразом. Ви можете прив’язати цю команду до ls для пошуку файлів, присутніх у вашій системі. У вашому кореневому каталозі введіть: </p> <pre><code class=\"hljs perl\">ls | grep l</code></pre> <p> У цьому списку будуть перелічені всі файли та папки, які починаються з символу l. Ви також можете фільтрувати файли відповідно до їх розширень за допомогою grep. </p> <h3 id=\"sort-files-by-time-and-date\"> Сортувати файли за часом і датою </h3> <p> Щоб перелічити всі файли та відсортувати їх за часом та датою створення / модифікації, використовуйте <strong> -т </strong> прапор разом з ls. </p> <pre><code class=\"hljs\">ls -t</code></pre> <h3 id=\"sort-files-by-size\"> Сортувати файли за розміром </h3> <p> <strong> -S </strong> flag дозволить вам сортувати файли та папки відповідно до їх розміру. </p> <pre><code class=\"hljs\">ls -S</code></pre> <p> За замовчуванням файли будуть відсортовані за спаданням (спочатку найбільший файл). Однак ви можете легко змінити цю поведінку, додавши <strong> р </strong> за допомогою <strong> -S </strong> прапор. </p> <pre><code class=\"hljs\">ls -Sr</code></pre> <h3 id=\"list-files-and-send-output-to-a-file\"> Список файлів і надсилання вихідних даних у файл </h3> <p> Використання <strong> &gt; </strong> символу, ви можете надіслати висновок команди ls у будь-який файл. </p> <pre><code class=\"hljs perl\">ls > ls-output.txt</code></pre> <p> Пізніше ви зможете прочитати вміст нещодавно створеного файлу, набравши текст <strong> cat ls-output.txt </strong> у своєму терміналі. </p> <p> </p> <h2 id=\"displaying-contents-of-a-directory-with-ls-command\"> Відображення вмісту каталогу за допомогою команди ls </h2> <p> Команда ls - одна з найпотужніших команд, що надається користувачам Linux. Щоб отримати максимальну віддачу від своїх команд в терміналі, ви можете спробувати вивчити ланцюгові команди разом. Ви навіть можете прокласти трубу <a href=\"https://www.makeuseof.com/linux-mv-command/\" target=\"_blank\" rel=\"nofollow noopener\"> Команда mv для переміщення файлів </a> з ls. </p> <p> Порада номер один, щоб почувати себе комфортно з Linux - це запам’ятовувати деякі основні команди. Це, безсумнівно, допоможе вам стати набагато ефективнішими та швидшими під час використання вашої системи. </p>"}