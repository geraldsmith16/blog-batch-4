{"title":"mySQL 데이터베이스 스키마 작성을위한 초보자 가이드","content":"<p> 소프트웨어 프로젝트를 개발할 때 가장 중요하고 기본적이며 본질적인 측면 중 하나는 적절하게 구조화 된 데이터베이스 스키마입니다. 이는 집을 지을 때 기초가 제대로 깔려 있는지 확인해야하는 것과 동일합니다. 그렇지 않으면 양질의 집을 지을 가능성이 크게 줄어 듭니다. </p> <p> 생각보다 놀랍게도 쉽게 잘 구성된 데이터베이스 스키마를 작성하는 데 사용되는 다양한 측면에 대해 알아 보겠습니다. </p> <h2 id=\"create-table-syntax\"> CREATE TABLE 구문 </h2> <p> 시작하려면 좋아하는 항목을 엽니 다. <a href=\"https://www.makeuseof.com/tag/nano-vs-vim-terminal-text-editors-compared/\" target=\"_blank\" rel=\"nofollow noopener\"> 텍스트 에디터 </a> . 데이터베이스 스키마를 만들려면 일반 텍스트 파일 만 있으면됩니다. 데이터베이스는 각각 열로 구성된 여러 테이블로 구성되며 CREATE TABLE 구문은 단일 테이블을 만드는 데 사용됩니다. 다음은 기본적인 예입니다. </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL,<br>is_active TINY INT NOT NULL,<br>full_name VAR CHAR(100) NOT NULL,<br>email VARCHAR(100) NOT NULL<br>);<br></code></pre> <p> 보시다시피 이것은 데이터베이스 테이블을 생성합니다. <strong> 사용자 </strong> 네 개의 열로 구성됩니다. 이것은 다음으로 시작하는 매우 간단한 SQL 문이어야합니다. <strong> 테이블 만들기 </strong> , 데이터베이스 테이블 이름, 괄호 안에 테이블 열이 쉼표로 구분됩니다. </p> <p> </p> <h2 id=\"use-correct-column-types\"> 올바른 열 유형 사용 </h2> <p> 위와 같이 테이블이 구성 될 열은 쉼표로 구분됩니다. 각 열 정의는 세 개의 동일한 부분으로 구성됩니다. </p> <pre><code class=\"hljs\">COL_NAME     TYPE     [OPTIONS]</code></pre> <p> 열 이름, 열 유형, 선택적 매개 변수 순입니다. 나중에 선택적 매개 변수에 대해 살펴 보 겠지만 열 유형에 중점을두고 아래에서 가장 일반적으로 사용되는 열 유형을 사용할 수 있습니다. </p> <p> 모든 인 텐트에 대해 위의 열 유형은 잘 구성된 mySQL 데이터베이스 스키마를 작성하는 데 필요한 전부입니다. </p> <p> </p> <h2 id=\"define-column-options\"> 열 옵션 정의 </h2> <p> 열을 정의 할 때 지정할 수있는 다양한 옵션도 있습니다. 아래는 다른 예입니다. <strong> 테이블 만들기 </strong> 성명서: </p> <pre><code class=\"hljs ruby\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>status ENUM('active','inactive') NOT NULL DEFAULT 'active',<br>balance DECIMAL(8,2) NOT NULL DEFAULT 0,<br>date_of_birth DATETIME,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>);<br></code></pre> <p> 위의 내용은 다소 벅차게 보일 수 있지만 초조하지는 않지만 매우 간단합니다. 세분화하면 위의 진술에서 일어나는 일이 다음과 같습니다. </p> <ul> <li> 테이블의 속도와 성능을 높이려면 가능한 모든 열에 항상 NOT NULL을 사용해야합니다. 이것은 단순히 행이 삽입 될 때 열을 비워 둘 수 없거나 널 (null)로 할 수 없음을 지정합니다. </li> <li> 속도와 성능을 향상시키는 데 도움이되므로 항상 열 크기를 최대한 현실적으로 작게 유지하십시오. </li> <li> 그만큼 <strong> 신분증 </strong> column은 정수이고 테이블의 기본 키이기도하며 고유함을 의미하며 레코드가 삽입 될 때마다 하나씩 증가합니다. 일반적으로 테이블 내의 단일 행을 쉽게 참조 할 수 있도록 만드는 모든 테이블에서 사용해야합니다. </li> <li> 그만큼 <strong> 상태 </strong> 열은 ENUM이며 &quot;활성&quot;또는 &quot;비활성&quot;값을 가져야합니다. 값을 지정하지 않으면 새 행이 &quot;활성&quot;상태로 시작됩니다. </li> <li> 그만큼 <strong> 밸런스 </strong> 열은 모든 새 행에 대해 0에서 시작하며 소수점 두 자리 형식으로 된 양입니다. </li> <li> 그만큼 <strong> 생년월일 </strong> 열은 단순히 DATE이지만 생성시 생년월일을 알 수 없기 때문에 null 값도 허용합니다. </li> <li> 마지막으로 <strong> created_at </strong> 열은 TIMESTAMP이며 기본값은 행이 삽입 된 현재 시간입니다. </li> </ul> <p> 위는 잘 구성된 데이터베이스 테이블의 예이며 앞으로의 예로 사용해야합니다. </p> <p> </p> <h2 id=\"link-tables-together-with-foreign-key-constraints\"> 외래 키 제약 조건과 함께 테이블 연결 </h2> <p> 다음과 같은 관계형 데이터베이스 사용의 가장 큰 장점 중 하나는 <a href=\"https://www.makeuseof.com/tag/install-mysql-windows/\" target=\"_blank\" rel=\"nofollow noopener\"> mySQL </a> 외래 키 제약 조건 및 계단식에 대한 탁월한 지원입니다. 이것은 두 테이블을 열로 연결하여 상위 하위 관계를 형성하는 경우이므로 상위 행이 삭제되면 필요한 하위 행도 자동으로 삭제됩니다. </p> <p> 예를 들면 다음과 같습니다. </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>full_name VARCHAR(100) NOT NULL,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>) engine=InnoDB;<br>CREATE TABLE orders (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>userid INT NOT NULL,<br>amount DECIMAL(8,2) NOT NULL,<br>product_name VARCHAR(200) NOT NULL,<br>FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE<br>) engine=InnoDB;<br></code></pre> <p> 마지막 줄에 FOREIGN KEY 절이 있습니다. 이 행은 단순히이 테이블에 <strong> 사용자 ID </strong> 열을 부모 행에 추가합니다. <strong> 신분증 </strong> 의 열 <strong> 사용자 </strong> 표. 이것이 의미하는 바는 행이 <strong> 사용자 </strong> 테이블에서 mySQL은 자동으로 모든 해당 행을 삭제합니다. <strong> 명령 </strong> 데이터베이스 내에서 구조적 무결성을 보장하는 테이블. </p> <p> 또한 <strong> engine = InnoDB </strong> 위의 진술 끝에. InnoDB가 이제 기본 mySQL 테이블 유형이지만 항상 그런 것은 아니므로 계단식이 InnoDB 테이블에서만 작동하므로 안전한 측면을 유지하기 위해 추가해야합니다. </p> <p> </p> <h2 id=\"design-with-confidence\"> 자신감있는 디자인 </h2> <p> 이제 견고하고 잘 구조화 된 mySQL 데이터베이스 스키마를 설계하는 중입니다. 위의 지식을 사용하여 이제 성능과 구조적 무결성을 모두 제공하는 잘 구성된 스키마를 작성할 수 있습니다. </p> <p> 스키마를 제자리에두고이를 사용하는 방법을 알고 있는지 확인하십시오. <a href=\"https://www.makeuseof.com/tag/sql-commands-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener\"> 필수 SQL 명령 </a> . </p>"}