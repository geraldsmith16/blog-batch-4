{"title":"編寫 mySQL 數據庫架構的初學者指南","content":"<p> 在開發軟件項目時，最重要、最基礎和最內在的方面之一是結構合理的數據庫模式。這相當於在蓋房子時你需要確保地基打好，否則蓋房子的機會就會大大減少。 </p> <p> 出人意料地比人們想像的要容易，讓我們學習用於編寫架構良好的數據庫模式的各個方面。 </p> <h2 id=\"create-table-syntax\"> 創建表語法 </h2> <p> 首先，打開你最喜歡的 <a href=\"https://www.makeuseof.com/tag/nano-vs-vim-terminal-text-editors-compared/\" target=\"_blank\" rel=\"nofollow noopener\"> 文本編輯器 </a> .創建數據庫架構只需要一個純文本文件。一個數據庫由多個表組成，每個表由列組成，CREATE TABLE 語法用於創建單個表。這是一個基本示例： </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL,<br>is_active TINY INT NOT NULL,<br>full_name VAR CHAR(100) NOT NULL,<br>email VARCHAR(100) NOT NULL<br>);<br></code></pre> <p> 如您所見，這將創建一個名為的數據庫表 <strong> 用戶 </strong> 它由四列組成。這應該是一個相當直接的 SQL 語句，以 <strong> 創建表 </strong> , 後跟數據庫表的名稱，然後在括號內以逗號分隔的表列。 </p> <p> </p> <h2 id=\"use-correct-column-types\"> 使用正確的列類型 </h2> <p> 如上所示，表格將包含的列用逗號分隔。每個列定義由三個相同的部分組成： </p> <pre><code class=\"hljs\">COL_NAME     TYPE     [OPTIONS]</code></pre> <p> 列的名稱，後跟列類型，然後是任何可選參數。我們稍後將介紹可選參數，但重點關注列類型，下面列出了最常用的可用列類型： </p> <p> 總而言之，上述列類型是您編寫構造良好的 mySQL 數據庫模式所需的全部內容。 </p> <p> </p> <h2 id=\"define-column-options\"> 定義列選項 </h2> <p> 定義列時，您還可以指定各種選項。下面是另一個例子 <strong> 創建表 </strong> 陳述： </p> <pre><code class=\"hljs ruby\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>status ENUM('active','inactive') NOT NULL DEFAULT 'active',<br>balance DECIMAL(8,2) NOT NULL DEFAULT 0,<br>date_of_birth DATETIME,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>);<br></code></pre> <p> 以上可能看起來有點令人生畏，但不要擔心，這很簡單。分解一下，以下是上述語句中發生的情況： </p> <ul> <li> 您應該始終在所有可能的列上使用 NOT NULL 以幫助提高表的速度和性能。這只是指定插入行時該列不能為空/空。 </li> <li> 始終盡量保持列大小盡可能小，因為它有助於提高速度和性能。 </li> <li> 這 <strong> ID </strong> column 是一個整數，也是表的主鍵，意味著它是唯一的，每次插入記錄時都會增加 1。這通常應用於您創建的所有表，以便您可以輕鬆引用表中的任何單行。 </li> <li> 這 <strong> 地位 </strong> column 是一個 ENUM，並且必須具有“active”或“inactive”值。如果未指定值，則新行將以“活動”狀態開始。 </li> <li> 這 <strong> 平衡 </strong> 每一新行的列從 0 開始，並且是一個格式化為兩位小數的金額。 </li> <li> 這 <strong> 出生日期 </strong> column 只是一個 DATE，但也允許空值，因為在創建時可能不知道出生日期。 </li> <li> 最後，該 <strong> created_at </strong> column 是一個 TIMESTAMP，默認為插入行時的當前時間。 </li> </ul> <p> 上面是一個結構良好的數據庫表的示例，應該用作以後的示例。 </p> <p> </p> <h2 id=\"link-tables-together-with-foreign-key-constraints\"> 將表與外鍵約束鏈接在一起 </h2> <p> 使用關係數據庫的最大優勢之一，例如 <a href=\"https://www.makeuseof.com/tag/install-mysql-windows/\" target=\"_blank\" rel=\"nofollow noopener\"> 我的SQL </a> 是它對外鍵約束和級聯的出色支持。這是當您通過一列將兩個錶鍊接在一起時，形成父子關係，因此當父行被刪除時，必要的子行也會自動刪除。 </p> <p> 下面是一個例子： </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>full_name VARCHAR(100) NOT NULL,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>) engine=InnoDB;<br>CREATE TABLE orders (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>userid INT NOT NULL,<br>amount DECIMAL(8,2) NOT NULL,<br>product_name VARCHAR(200) NOT NULL,<br>FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE<br>) engine=InnoDB;<br></code></pre> <p> 您會注意到 FOREIGN KEY 子句是最後一行。這一行只是說明該表包含由 <strong> 用戶身份 </strong> 列到其父行，即 <strong> ID </strong> 的列 <strong> 用戶 </strong> 桌子。這意味著，任何時候從 <strong> 用戶 </strong> 表，mySQL 會自動從表中刪除所有對應的行 <strong> 命令 </strong> 表有助於確保數據庫中的結構完整性。 </p> <p> 還要注意 <strong> 引擎=InnoDB </strong> 在上述聲明的末尾。儘管 InnoDB 現在是默認的 mySQL 表類型，但並非總是如此，因此應該添加這只是為了安全起見，因為級聯僅適用於 InnoDB 表。 </p> <p> </p> <h2 id=\"design-with-confidence\"> 充滿信心的設計 </h2> <p> 您現在可以很好地構建可靠的、結構良好的 mySQL 數據庫模式。使用上述知識，您現在可以編寫組織良好的模式，同時提供性能和結構完整性。 </p> <p> 有了你的架構，確保你知道如何將它與這些一起使用 <a href=\"https://www.makeuseof.com/tag/sql-commands-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener\"> 基本的 SQL 命令 </a> . </p>"}