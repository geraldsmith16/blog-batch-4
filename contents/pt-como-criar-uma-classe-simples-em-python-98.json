{"title":"Como criar uma classe simples em Python","content":"<p> Em uma linguagem orientada a objetos, uma classe é uma parte extensível de código que representa um modelo para criar e usar os objetos dessa classe. Um objeto de uma classe simplesmente se refere a uma instância da classe definida. </p> <h2 id=\"python-class-basics\"> Python Class Basics </h2> <p> Na linguagem de programação Python, todos os dados são representados como uma instância de alguma classe. Se você não está familiarizado com o idioma, consulte nosso <a href=\"https://www.makeuseof.com/python-hello-world/\" target=\"_blank\" rel=\"nofollow noopener\"> guia do iniciante em Python </a> antes de seguir em frente. </p> <p> Uma classe fornece um conjunto de comportamentos na forma de funções de membro (também conhecidas como métodos), que tem implementações que são comuns a todas as instâncias dessa classe, e também determina a maneira como as informações de estado de sua instância são representadas no forma de atributos. </p> <p> </p> <p> O código a seguir representa um exemplo de uma classe definida em Python. A classe definida no código fornece uma implementação de uma classe RaceCar. </p> <p> Cada instância da classe fornece um modelo simples para diferentes marcas de carros e contém as seguintes informações de estado: nome do carro, nome do motorista, número da placa do carro, velocidade atual, taxa de excesso de velocidade e cor. </p> <p> Esta classe de carro modela um sensor especial dentro de cada carro que registra uma multa de $ 50 contra o motorista do carro se ele ou ela exceder o limite de velocidade legal de 140 milhas por hora. </p> <p> </p> <h2 id=\"example-of-a-class-car-class\"> Exemplo de uma classe (classe de carro) </h2> <pre><code class=\"hljs ruby\"><br>class Car:<br>#Constructor<br>#the init method is responsible for initialising the values of the instance #variables in the class.<br>def __init__(self, car_name, driver_name, license_plate_number, <br>current_speed, speeding_charge, colour):<br>self.car_name = car_name<br>self._driver_name = driver_name<br>self._license_plate_number = license_plate_number<br>self._current_speed = current_speed<br>self._speeding_charge = speeding_charge<br>self._colour = colour<br>#Accessor methods<br>#The get_car_name method returns the name of the car<br>def get_car_name(self):<br>return self._car_name<br>#The get_driver_name method returns the name of the driver<br>def get_driver_name(self):<br>return self._driver_name<br>#The get_license_plate method returns the license plate of the car<br>def get_license_plate(self):<br>return self._license_plate<br>#The get_current_speed method returns the current speed at which the car is #moving<br>def get_current_speed(self):<br>return self._current_speed<br>#The get_speeding_charge method returns the total amount of money that the <br>#driver has to pay for over-speeding<br>def get_speeding_charge(self):<br>return self._speeding_charge<br>#The get_colour method returns the colour of our sweet ride!<br>def get_colour(self):<br>return self._colour<br>#Mutator methods<br>#The set_driver value changes the driver of our car.<br>def set_driver(self, new_driver):<br>self._driver_name = new_driver<br>#The speeding_ticket method ensures that the driver is charged 50 bucks when#he or she caught speeding above 140 miles per hour :(<br>def speeding_ticket(self, current_speed):<br>if current_speed "}