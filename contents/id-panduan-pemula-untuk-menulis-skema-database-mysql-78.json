{"title":"Panduan Pemula untuk Menulis Skema Database mySQL","content":"<p> Saat mengembangkan proyek perangkat lunak, salah satu aspek terpenting, mendasar, dan intrinsik adalah skema database yang terstruktur dengan baik. Ini setara dengan ketika membangun rumah Anda perlu memastikan fondasi diletakkan dengan benar, jika tidak, kemungkinan membangun rumah yang berkualitas berkurang secara drastis. </p> <p> Ternyata lebih mudah dari yang diperkirakan, mari kita pelajari berbagai aspek yang digunakan untuk menulis skema database yang dirancang dengan baik. </p> <h2 id=\"create-table-syntax\"> Sintaks BUAT TABEL </h2> <p> Untuk memulai, buka favorit Anda <a href=\"https://www.makeuseof.com/tag/nano-vs-vim-terminal-text-editors-compared/\" target=\"_blank\" rel=\"nofollow noopener\"> editor teks </a> . Membuat skema database tidak lebih dari file teks biasa. Database terdiri dari beberapa tabel, masing-masing terdiri dari kolom, dan sintaks CREATE TABLE digunakan untuk membuat satu tabel. Berikut ini contoh dasarnya: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL,<br>is_active TINY INT NOT NULL,<br>full_name VAR CHAR(100) NOT NULL,<br>email VARCHAR(100) NOT NULL<br>);<br></code></pre> <p> Seperti yang Anda lihat, ini akan membuat tabel database bernama <strong> pengguna </strong> yang terdiri dari empat kolom. Ini harus menjadi pernyataan SQL yang cukup mudah dimulai dengan <strong> BUAT TABEL </strong> , diikuti dengan nama tabel database, lalu di dalam kurung kolom tabel dipisahkan dengan koma. </p> <p> </p> <h2 id=\"use-correct-column-types\"> Gunakan Jenis Kolom yang Benar </h2> <p> Seperti yang ditunjukkan di atas, kolom tabel akan terdiri dari dipisahkan dengan koma. Setiap definisi kolom terdiri dari tiga bagian yang sama: </p> <pre><code class=\"hljs\">COL_NAME     TYPE     [OPTIONS]</code></pre> <p> Nama kolom, diikuti dengan jenis kolom, lalu parameter opsional apa pun. Kami akan masuk ke parameter opsional nanti, tetapi berkonsentrasi pada jenis kolom, di bawah ini daftar jenis kolom yang paling umum digunakan yang tersedia: </p> <p> Untuk semua maksud, jenis kolom di atas adalah semua yang Anda butuhkan untuk menulis skema database mySQL yang dibangun dengan baik. </p> <p> </p> <h2 id=\"define-column-options\"> Tentukan Opsi Kolom </h2> <p> Saat mendefinisikan kolom, ada juga berbagai opsi yang dapat Anda tentukan. Di bawah ini adalah contoh lain dari <strong> BUAT TABEL </strong> pernyataan: </p> <pre><code class=\"hljs ruby\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>status ENUM('active','inactive') NOT NULL DEFAULT 'active',<br>balance DECIMAL(8,2) NOT NULL DEFAULT 0,<br>date_of_birth DATETIME,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>);<br></code></pre> <p> Hal di atas mungkin terlihat sedikit menakutkan, tetapi jangan khawatir, ini cukup sederhana. Rusak, inilah yang terjadi dalam pernyataan di atas: </p> <ul> <li> Anda harus selalu menggunakan NOT NULL pada semua kolom yang memungkinkan untuk membantu kecepatan dan kinerja tabel. Ini hanya menentukan kolom tidak boleh dibiarkan kosong / null ketika baris dimasukkan. </li> <li> Selalu mencoba untuk menjaga ukuran kolom sekecil mungkin, karena membantu meningkatkan kecepatan dan kinerja. </li> <li> Itu <strong> Indo </strong> kolom adalah bilangan bulat, juga merupakan kunci utama tabel yang berarti unik, dan akan bertambah satu setiap kali catatan dimasukkan. Ini biasanya harus digunakan pada semua tabel yang Anda buat sehingga Anda dapat dengan mudah mereferensikan setiap baris dalam tabel. </li> <li> Itu <strong> status </strong> kolom adalah ENUM dan harus memiliki nilai &quot;aktif&quot; atau &quot;tidak aktif&quot;. Jika tidak ada nilai yang ditentukan, baris baru akan dimulai dengan status &quot;aktif&quot;. </li> <li> Itu <strong> keseimbangan </strong> kolom dimulai dari 0 untuk setiap baris baru, dan merupakan jumlah yang diformat dua dua koma desimal. </li> <li> Itu <strong> tanggal lahir </strong> kolom hanyalah DATE tetapi juga memungkinkan nilai nol karena tanggal lahir mungkin tidak diketahui saat dibuat. </li> <li> Terakhir, <strong> dibuat di </strong> kolom adalah TIMESTAMP dan default ke waktu saat ini ketika baris dimasukkan. </li> </ul> <p> Di atas adalah contoh tabel database yang terstruktur dengan baik, dan harus digunakan sebagai contoh untuk selanjutnya. </p> <p> </p> <h2 id=\"link-tables-together-with-foreign-key-constraints\"> Tautkan Tabel Bersama Dengan Batasan Kunci Asing </h2> <p> Salah satu keuntungan terbesar menggunakan database relasional seperti: <a href=\"https://www.makeuseof.com/tag/install-mysql-windows/\" target=\"_blank\" rel=\"nofollow noopener\"> mySQL </a> adalah dukungan yang sangat baik untuk kendala kunci asing dan cascading. Ini adalah saat Anda menautkan dua tabel bersama oleh sebuah kolom, membentuk hubungan induk anak, jadi saat baris induk dihapus, baris turunan yang diperlukan juga otomatis terhapus. </p> <p> Berikut ini contohnya: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>full_name VARCHAR(100) NOT NULL,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>) engine=InnoDB;<br>CREATE TABLE orders (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>userid INT NOT NULL,<br>amount DECIMAL(8,2) NOT NULL,<br>product_name VARCHAR(200) NOT NULL,<br>FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE<br>) engine=InnoDB;<br></code></pre> <p> Anda akan melihat klausa FOREIGN KEY sebagai baris terakhir. Baris ini hanya menyatakan tabel ini berisi baris anak yang dihubungkan oleh <strong> identitas pengguna </strong> kolom ke baris induknya, yaitu <strong> Indo </strong> kolom dari <strong> pengguna </strong> meja. Artinya, setiap kali sebuah baris dihapus dari <strong> pengguna </strong> tabel, mySQL akan secara otomatis menghapus semua baris yang sesuai dari <strong> pesanan </strong> tabel membantu memastikan integritas struktural dalam database Anda. </p> <p> Perhatikan juga <strong> mesin=InnoDB </strong> di akhir pernyataan di atas. Meskipun InnoDB sekarang adalah tipe tabel mySQL default, itu tidak selalu, jadi ini harus ditambahkan hanya untuk tetap aman, karena cascading hanya berfungsi dengan tabel InnoDB. </p> <p> </p> <h2 id=\"design-with-confidence\"> Desain Dengan Percaya Diri </h2> <p> Anda sekarang sedang dalam perjalanan untuk merancang skema database mySQL yang solid dan terstruktur dengan baik. Dengan menggunakan pengetahuan di atas, Anda sekarang dapat menulis skema yang terorganisir dengan baik yang memberikan kinerja dan integritas struktural. </p> <p> Dengan skema Anda di tempat, pastikan Anda tahu cara menggunakannya dengan ini <a href=\"https://www.makeuseof.com/tag/sql-commands-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener\"> perintah SQL penting </a> . </p>"}