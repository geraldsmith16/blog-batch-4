{"title":"Come creare una classe semplice in Python","content":"<p> In un linguaggio orientato agli oggetti, una classe è un pezzo di codice estensibile che rappresenta un modello per creare e utilizzare gli oggetti di quella classe. Un oggetto di una classe fa semplicemente riferimento a un&#39;istanza della classe definita. </p> <h2 id=\"python-class-basics\"> Nozioni di base sulle classi Python </h2> <p> Nel linguaggio di programmazione Python, ogni dato è rappresentato come un&#39;istanza di una classe. Se non hai familiarità con la lingua, consulta il nostro <a href=\"https://www.makeuseof.com/python-hello-world/\" target=\"_blank\" rel=\"nofollow noopener\"> guida per principianti a Python </a> prima di andare avanti. </p> <p> Una classe fornisce un insieme di comportamenti sotto forma di funzioni membro (note anche come metodi), che ha implementazioni comuni a tutte le istanze di quella classe e determina anche il modo in cui le informazioni di stato per la sua istanza sono rappresentate nel forma di attributi. </p> <p> </p> <p> Il codice seguente rappresenta un esempio di una classe definita in Python. La classe definita nel codice fornisce un&#39;implementazione di una classe RaceCar. </p> <p> Ogni istanza della classe fornisce un modello semplice per diverse marche di auto e contiene le seguenti informazioni di stato: nome dell&#39;auto, nome del conducente, numero di targa dell&#39;auto, velocità attuale, tariffa per eccesso di velocità e colore. </p> <p> Questa classe di auto, modella un sensore speciale all&#39;interno di ogni auto che registra una multa di $ 50 contro il conducente dell&#39;auto se supera il limite di velocità legale di 140 miglia all&#39;ora. </p> <p> </p> <h2 id=\"example-of-a-class-car-class\"> Esempio di una classe (Classe auto) </h2> <pre><code class=\"hljs ruby\"><br>class Car:<br>#Constructor<br>#the init method is responsible for initialising the values of the instance #variables in the class.<br>def __init__(self, car_name, driver_name, license_plate_number, <br>current_speed, speeding_charge, colour):<br>self.car_name = car_name<br>self._driver_name = driver_name<br>self._license_plate_number = license_plate_number<br>self._current_speed = current_speed<br>self._speeding_charge = speeding_charge<br>self._colour = colour<br>#Accessor methods<br>#The get_car_name method returns the name of the car<br>def get_car_name(self):<br>return self._car_name<br>#The get_driver_name method returns the name of the driver<br>def get_driver_name(self):<br>return self._driver_name<br>#The get_license_plate method returns the license plate of the car<br>def get_license_plate(self):<br>return self._license_plate<br>#The get_current_speed method returns the current speed at which the car is #moving<br>def get_current_speed(self):<br>return self._current_speed<br>#The get_speeding_charge method returns the total amount of money that the <br>#driver has to pay for over-speeding<br>def get_speeding_charge(self):<br>return self._speeding_charge<br>#The get_colour method returns the colour of our sweet ride!<br>def get_colour(self):<br>return self._colour<br>#Mutator methods<br>#The set_driver value changes the driver of our car.<br>def set_driver(self, new_driver):<br>self._driver_name = new_driver<br>#The speeding_ticket method ensures that the driver is charged 50 bucks when#he or she caught speeding above 140 miles per hour :(<br>def speeding_ticket(self, current_speed):<br>if current_speed "}