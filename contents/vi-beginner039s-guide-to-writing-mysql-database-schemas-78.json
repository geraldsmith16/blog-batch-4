{"title":"Hướng dẫn Viết Lược đồ Cơ sở dữ liệu MySQL cho Người mới bắt đầu","content":"<p> Khi phát triển một dự án phần mềm, một trong những khía cạnh quan trọng nhất, nền tảng và nội tại là một lược đồ cơ sở dữ liệu có cấu trúc thích hợp. Tương tự như khi xây một ngôi nhà, bạn cần đảm bảo nền móng được đặt đúng cách, nếu không cơ hội xây dựng một ngôi nhà chất lượng sẽ giảm đi đáng kể. </p> <p> Đáng ngạc nhiên là dễ dàng hơn người ta nghĩ, chúng ta hãy tìm hiểu các khía cạnh khác nhau được sử dụng để viết một lược đồ cơ sở dữ liệu được kiến ​​trúc tốt. </p> <h2 id=\"create-table-syntax\"> Cú pháp TẠO BẢNG </h2> <p> Để bắt đầu, hãy mở mục yêu thích của bạn <a href=\"https://www.makeuseof.com/tag/nano-vs-vim-terminal-text-editors-compared/\" target=\"_blank\" rel=\"nofollow noopener\"> trình soạn thảo văn bản </a> . Tạo một lược đồ cơ sở dữ liệu không yêu cầu gì nhiều hơn một tệp văn bản thuần túy. Cơ sở dữ liệu bao gồm nhiều bảng, mỗi bảng bao gồm các cột và cú pháp CREATE TABLE được sử dụng để tạo một bảng duy nhất. Đây là một ví dụ cơ bản: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL,<br>is_active TINY INT NOT NULL,<br>full_name VAR CHAR(100) NOT NULL,<br>email VARCHAR(100) NOT NULL<br>);<br></code></pre> <p> Như bạn có thể thấy, điều này sẽ tạo ra một bảng cơ sở dữ liệu có tên <strong> người dùng </strong> bao gồm bốn cột. Đây phải là một câu lệnh SQL khá đơn giản bắt đầu bằng <strong> TẠO BẢNG </strong> , theo sau là tên của bảng cơ sở dữ liệu, sau đó trong ngoặc đơn, các cột của bảng được phân tách bằng dấu phẩy. </p> <p> </p> <h2 id=\"use-correct-column-types\"> Sử dụng các loại cột chính xác </h2> <p> Như được hiển thị ở trên, các cột mà bảng sẽ bao gồm được phân tách bằng dấu phẩy. Mỗi định nghĩa cột bao gồm ba phần giống nhau: </p> <pre><code class=\"hljs\">COL_NAME     TYPE     [OPTIONS]</code></pre> <p> Tên của cột, theo sau là loại cột, sau đó là bất kỳ tham số tùy chọn nào. Chúng ta sẽ đi vào các tham số tùy chọn sau, nhưng tập trung vào loại cột, bên dưới liệt kê các loại cột được sử dụng phổ biến nhất hiện có: </p> <p> Đối với tất cả các ý định, các loại cột ở trên là tất cả những gì bạn cần để viết các lược đồ cơ sở dữ liệu mySQL được xây dựng tốt. </p> <p> </p> <h2 id=\"define-column-options\"> Xác định Tùy chọn Cột </h2> <p> Khi xác định cột cũng có nhiều tùy chọn khác nhau mà bạn có thể chỉ định. Dưới đây là một ví dụ khác về <strong> TẠO BẢNG </strong> tuyên bố: </p> <pre><code class=\"hljs ruby\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>status ENUM('active','inactive') NOT NULL DEFAULT 'active',<br>balance DECIMAL(8,2) NOT NULL DEFAULT 0,<br>date_of_birth DATETIME,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>);<br></code></pre> <p> Ở trên có vẻ hơi khó khăn, nhưng đừng lo, nó khá đơn giản. Chia nhỏ, đây là những gì đang xảy ra trong tuyên bố trên: </p> <ul> <li> Bạn nên luôn sử dụng NOT NULL trên tất cả các cột có thể để giúp tăng tốc độ và hiệu suất của bảng. Điều này chỉ đơn giản là chỉ định cột không được để trống / rỗng khi một hàng được chèn vào. </li> <li> Luôn cố gắng giữ kích thước cột càng nhỏ càng tốt, vì nó giúp cải thiện tốc độ và hiệu suất. </li> <li> Các <strong> Tôi </strong> cột là một số nguyên, cũng là khóa chính của bảng có nghĩa là nó là duy nhất và sẽ tăng lên mỗi khi một bản ghi được chèn vào. Điều này thường được sử dụng trên tất cả các bảng bạn tạo để bạn có thể dễ dàng tham chiếu bất kỳ hàng đơn lẻ nào trong bảng. </li> <li> Các <strong> trạng thái </strong> cột là ENUM và phải có giá trị &quot;hoạt động&quot; hoặc &quot;không hoạt động&quot;. Nếu không có giá trị nào được chỉ định, một hàng mới sẽ bắt đầu với trạng thái &quot;hoạt động&quot;. </li> <li> Các <strong> thăng bằng </strong> cột bắt đầu từ 0 cho mọi hàng mới và là một số tiền được định dạng hai hai dấu thập phân. </li> <li> Các <strong> ngày sinh </strong> cột chỉ đơn giản là NGÀY nhưng cũng cho phép giá trị rỗng vì ngày sinh có thể không được biết khi tạo. </li> <li> Cuối cùng, <strong> create_at </strong> cột là TIMESTAMP và mặc định là thời gian hiện tại khi hàng được chèn. </li> </ul> <p> Trên đây là một ví dụ về một bảng cơ sở dữ liệu có cấu trúc độc đáo và sẽ được sử dụng làm ví dụ về sau. </p> <p> </p> <h2 id=\"link-tables-together-with-foreign-key-constraints\"> Liên kết các bảng cùng với các ràng buộc khóa ngoại </h2> <p> Một trong những lợi thế lớn nhất của việc sử dụng cơ sở dữ liệu quan hệ như <a href=\"https://www.makeuseof.com/tag/install-mysql-windows/\" target=\"_blank\" rel=\"nofollow noopener\"> mySQL </a> là sự hỗ trợ tuyệt vời của nó cho các ràng buộc khóa ngoại và xếp tầng. Đây là khi bạn liên kết hai bảng với nhau bằng một cột, tạo thành mối quan hệ cha mẹ, vì vậy khi hàng cha bị xóa, các hàng con cần thiết cũng tự động bị xóa. </p> <p> Đây là một ví dụ: </p> <pre><code class=\"hljs\"><br>CREATE TABLE users (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>username VARCHAR(100) NOT NULL UNIQUE,<br>full_name VARCHAR(100) NOT NULL,<br>created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP<br>) engine=InnoDB;<br>CREATE TABLE orders (<br>id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,<br>userid INT NOT NULL,<br>amount DECIMAL(8,2) NOT NULL,<br>product_name VARCHAR(200) NOT NULL,<br>FOREIGN KEY (userid) REFERENCES users (id) ON DELETE CASCADE<br>) engine=InnoDB;<br></code></pre> <p> Bạn sẽ nhận thấy mệnh đề NGOẠI KHÓA ở dòng cuối cùng. Dòng này chỉ đơn giản cho biết bảng này chứa các hàng con được liên kết bởi <strong> tên người dùng </strong> đến hàng mẹ của chúng, là cột <strong> Tôi </strong> cột của <strong> người dùng </strong> bàn. Điều này có nghĩa là, bất kỳ lúc nào một hàng bị xóa khỏi <strong> người dùng </strong> bảng, mySQL sẽ tự động xóa tất cả các hàng tương ứng khỏi <strong> đơn đặt hàng </strong> bảng giúp đảm bảo tính toàn vẹn của cấu trúc trong cơ sở dữ liệu của bạn. </p> <p> Cũng lưu ý <strong> engine = InnoDB </strong> ở cuối câu lệnh trên. Mặc dù InnoDB hiện là loại bảng mySQL mặc định, nhưng nó không phải lúc nào cũng vậy, vì vậy điều này nên được thêm vào chỉ để an toàn, vì xếp tầng chỉ hoạt động với các bảng InnoDB. </p> <p> </p> <h2 id=\"design-with-confidence\"> Thiết kế với sự tự tin </h2> <p> Bây giờ bạn đang trên con đường xây dựng kiến ​​trúc các lược đồ cơ sở dữ liệu mySQL có cấu trúc tốt, vững chắc. Sử dụng kiến ​​thức ở trên, giờ đây bạn có thể viết các lược đồ được tổ chức tốt cung cấp cả hiệu suất và tính toàn vẹn của cấu trúc. </p> <p> Với lược đồ của bạn tại chỗ, hãy đảm bảo rằng bạn biết cách sử dụng nó với những <a href=\"https://www.makeuseof.com/tag/sql-commands-cheat-sheet/\" target=\"_blank\" rel=\"nofollow noopener\"> các lệnh SQL cơ bản </a> . </p>"}